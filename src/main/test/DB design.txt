// https://dbdiagram.io/d/671c304a97a66db9a35172b7
// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table User{
  userId int [primary key, increment]
  name nvarchar(50)
  birthday date
  phoneNumber nvarchar(12)
  image varbinary(MAX)
  address nvarchar(100)
}

Table Login{
  userId int [primary key, unique]
  username varchar(50)
  password varchar(50)
}

Ref : Login.userId > User.userId

Table Resident {
  residentId int [primary key, increment]
  apartmentId int
  name nvarchar(50)
  birthday date
  gender bit
  phoneNumber nvarchar(12)
  nationallity nvarchar(50)
  isOwner bool
  relationshipWithOwner nvarchar(50)
  status int
}

Table Apartment{
  apartmentId int [primary key, increment]
  ownerId int
  area float
  floor int
  room nvarchar(20)
}

Ref : Apartment.ownerId > Resident.residentId
Ref : Resident.apartmentId > Apartment.apartmentId

Table Activity{
  activityId int [primary key, increment]
  residentId int
  status int
  timeIn date
  timeOut date
  note nvarchar(500)
}

Ref : Activity.residentId > Resident.residentId

Table Fee {
    feeId INT [pk, increment]
    name VARCHAR(255) [not null]
    ratePerSquareMeter DOUBLE [not null]
    isMandatory BOOLEAN [not null]
    feeType VARCHAR(50) [note: 'SERVICE_FEE, MANAGEMENT_FEE, CONTRIBUTION_FEE']
}

Table Payment {
    paymentId INT [pk, increment]
    feeId INT [ref: > Fee.feeId]
    apartmentId INT  [not null, ref: > Apartment.apartmentId]
    amountDue DOUBLE [not null]
    amountPaid DOUBLE [not null]
    paymentDate DATE [not null]
    payForMonth INT [not null, note: '1 to 12']
    payForYear INT [not null]
    status VARCHAR(50) [note: 'PENDING, PAID, OVERDUE']
}


Table Vehicle{
  vehicleId int [primary key, increment]
  residentId int
  type nvarchar(30)
  licensePlate varchar(30)
}
Ref : Vehicle.residentId > Resident.residentId




