// https://dbdiagram.io/d/671c304a97a66db9a35172b7
// Use DBML to define your database structure
// Docs: https://dbml.dbdiagram.io/docs

Table User{
  userId int [primary key, increment]
  name nvarchar(50) [not null]
  birthday date [not null]
  phoneNumber nvarchar(12) [not null]
  image varbinary(MAX)
  address nvarchar(100)
}

Table Login{
  userId int [primary key, unique]
  username varchar(50) [not null]
  password varchar(50) [not null]
}

Ref : Login.userId > User.userId

Table Resident {
  residentId int [primary key, increment]
  apartmentId int [not null]
  name nvarchar(50) [not null]
  birthday date [not null]
  gender bit
  phoneNumber nvarchar(12) [not null]
  nationality nvarchar(50)
  isOwner bit [not null]
  relationshipWithOwner nvarchar(50) [not null]
  status int [not null]
}

Table Apartment{
  apartmentId int [primary key, increment]
  ownerId int [not null]
  area float [not null]
  floor int [not null]
  room nvarchar(20) [not null]
}

Ref : Apartment.ownerId > Resident.residentId
Ref : Resident.apartmentId > Apartment.apartmentId

Table Activity{
  activityId int [primary key, increment]
  residentId int [not null]
  status int [not null]
  timeIn date [not null]
  timeOut date [not null]
  note nvarchar(500)
}

Ref : Activity.residentId > Resident.residentId

Table Fee {
  feeId int [primary key, increment]
  name varchar(255) [not null]
  ratePerSquareMeter double [not null]
  isMandatory boolean [not null]
  feeType varchar(50)
}

Table Payment {
  paymentId int [primary key, increment]
  feeId int
  apartmentId int [not null]
  amountDue double [not null]
  amountPaid double [not null]
  paymentDate date [not null]
  payForMonth int [not null]
  payForYear int [not null]
  status varchar(50)
}
Ref : Payment.apartmentId > Apartment.apartmentId
Ref : Payment.feeId > Fee.feeId

Table Vehicle{
  vehicleId int [primary key, increment]
  residentId int [not null]
  type nvarchar(30) [not null]
  licensePlate varchar(30) [not null]
}
Ref : Vehicle.residentId > Resident.residentId




